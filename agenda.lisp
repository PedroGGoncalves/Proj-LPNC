(setf horasi (make-array '(100)))
(setf diasi (make-array '(100)))
(setf mesesi (make-array '(100)))
(setf anosi (make-array '(100)))
(setf horasf (make-array '(100)))
(setf diasf (make-array '(100)))
(setf mesesf (make-array '(100)))
(setf anosf (make-array '(100)))
(setq contador 0)

(defun data (hora dia mes ano)
(if (and (>= hora 0)(< hora 24)(> dia 0)(<= dia 30)(> mes 0)(<= mes 12))
1
0
)
)
(defun evento (horai diai mesi anoi &optional horaf diaf mesf anof);;o fim fica optativo
(if(= (data horai diai mesi anoi) 1)
(if(eql horaf nil) ;;omissao fim,assume se uma hora de evento
(if (= (data (+ horai 1) diai mesi anoi) 1)
(agenda horai diai mesi anoi (+ horai 1) diai mesi anoi)

)
(if (= (data horaf diaf mesf anof) 1)
(agenda horai diai mesi anoi horaf diaf mesf anof)
;;(print "Data valida B") ;;agenda aki
)
;; se for valido, iria chamar agenda e armazenar (vetor?)
)
)
)
(defun imprimirData
(setq imprime 0)
(loop while (< imprime contador) 
  do (setf imprime (+ imprime 1))
(write horasi contador)
(write diasi contador)
(write mesesi contador)
(write anosi contador)
(write horasf contador)
(write diasf contador)
(write mesesf contador)
(write anosf contador)
)
)
(defun agenda (h1 d1 m1 a1 h2 d2 m2 a2)
(setf (aref horasi contador) h1)
(setf (aref diasi contador) d1)
(setf (aref mesesi contador) m1)
(setf (aref anosi contador) a1)
(setf (aref horasf contador) h2)
(setf (aref diasf contador) d2)
(setf (aref mesesf contador) m2)
(setf (aref anosf contador) a2)
(setq contador (+ contador 1))
(print "Data valida B") 
(imprimirData)
)

(evento 22 1 1 1)
(evento 22 3 2 20)
